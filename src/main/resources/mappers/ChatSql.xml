<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.chat.ChatMapper">
	<!-- 채팅방을 나가지 않은 room 번호 존제확인 -->
	<select id="getRoomNumber"  parameterType="CDTO" resultType="String">
	    select room from chat
	    where (recv_id = #{recv_id} and send_id=#{send_id} and exit_count != 1) or (send_id = #{recv_id} and recv_id=#{send_id} and exit_count != 1)
	    limit 0,1
	</select>
	<!-- room번호 최댓값 얻기 -->
	<select id="getMaxRoom" resultType="Int">
	    select ifnull(max(room),0) from chat
	</select>
	
	<!-- 메세지 보내기 -->
	<insert id="sendMessage" parameterType="CDTO">
		insert into chat values(0, #{room}, #{send_id}, #{recv_id}, now(), now(), #{content}, 0, 0, 0);
	</insert>
	
	<!-- 해당 room의 메세지 내역 가져오기 -->
	<select id="getRoomContentList" parameterType="CDTO" resultType="CDTO">
	    select c.num, c.room, c.send_id, c.recv_id, date_format(c.send_time, '%Y-%m-%d %H:%i') send_time, c.read_time, c.content, c.read_check, u.photo,
	    c.exit_id, c.exit_count from chat c left outer join user u
	    on c.send_id = u.id where room=#{room}
	</select>
	
	<!-- 대화중인 맴버 목록 리스트 가져오기 -->
	<select id="getChatList" parameterType="CDTO" resultType="CDTO">
	    select num, room, send_id, recv_id, date_format(send_time, '%Y-%m-%d %H:%i') send_time, read_time, content, read_check,
	    exit_id, exit_count
	    from chat
	    where num in (select max(num) from chat group by room) and (send_id = #{id} or recv_id=#{id})
	    and exit_id != #{id} 
	    order by num desc;
	</select>
	
	
	<!-- 메세지 읽기 기능 -->
	<!-- 안읽은 메세지 갯수 가져오기-->
	<select id="countUnreadMessage" parameterType="CDTO" resultType="Int">
	    select count(num) from chat 
	    where recv_id=#{id} and read_check=0 and room=#{room}
	</select>
	<!-- 메세지 읽음 처리 -->
	<update id="changeMessageReadCheck" parameterType="CDTO">
	    update chat set read_check=1  where room=#{room} and read_check=0 and recv_id=#{id}
	</update>
	
	<!-- 메세지 읽은 시간 처리-->
	<update id="changeMessageReadTime" parameterType="CDTO">
	    update chat set read_time = now()  where room=#{room} and read_check=0 and recv_id=#{id}
	</update>
	
	
	<!-- 상대방 프로필 가져오기  -->
	<select id="getOtherProfile" parameterType="CDTO" resultType="String">
	    select photo from user
	    <choose>
	        <when test="send_id == id">
	            where id = #{recv_id}
	        </when>
	        <otherwise>
	            where id = #{send_id}
	        </otherwise>
	    </choose>
	</select>
	
	
	<!-- 채팅방나가기 기능 -->
	<!-- 나가기 누른 회원이 있는지 확인  -->
	<select id="countExitId" parameterType="String" resultType="int">
		select exit_count from chat where room = #{room} limit 0,1
	</select>
	<!-- 나간 회원아이디 얻기 -->
	<select id="getExitId" parameterType="String" resultType="String">
		select exit_id from chat where room = #{room} limit 0,1
	</select>
	<!-- 나가기 누른 회원 등록 -->
	<update id="updateExitId" parameterType="String">
		update chat set exit_id = #{exit_id}, exit_count = 1 where room = #{room};
	</update>
	<!-- 두회원이 모두 나갔을 경우 룸 삭제 -->
	<delete id="deleteRoom" parameterType="String">
		delete from chat where room = #{room}
	</delete>
	
</mapper>